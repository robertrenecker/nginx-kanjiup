##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
#
#
# Catch-all invalid hostname/server names and redirect to https: kanjiporn.com
#server {
#        listen 80;
#        server_name _;
#        return 301 https://kanjiporn.com$request_uri;
#}

#redirect https www to https
server {
        listen 8080;
        ssl on;
        ssl_certificate /etc/ssl/kanjiporn_com/cert_chain.crt;
        ssl_certificate_key /etc/ssl/kanjiporn_com/server.key;
        ssl_password_file /etc/ssl/kanjiporn_com/server_key_pass;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        server_name www.kanjiporn.com;
        return 301 https://kanjiporn.com$request_uri;
}

# mains server block
server {
        listen 8080;
        ssl on;
        ssl_certificate /etc/ssl/kanjiporn_com/cert_chain.crt;
        ssl_certificate_key /etc/ssl/kanjiporn_com/server.key;
        ssl_password_file /etc/ssl/kanjiporn_com/server_key_pass;
        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        server_name kanjiporn.com;
        access_log /var/log/nginx/nginx.vhost.access.log;
        error_log /var/log/nginx/nginx.vhost.error.log;
        location / {
                 root /var/www/kanjiporn.com/kanjip/kanjip/frontend/build/;
                 index index.html index.htm;

}

        location /api {
                rewrite ^/api/(.*) /$1 break;
                # include proxy_params;
                client_max_body_size 10m;
                add_header 'Access-Control-Allow-Origin' http://ui:8080;
                # proxy_set_header Host $host;
                # proxy_redirect http:// https://;
                proxy_pass http://flask:8000/;
        }
}
